name: Deploy Prometheus Stack to Kubernetes

on:
  workflow_dispatch:
    inputs:
      kubeconfig:
        description: 'Base64 encoded kubeconfig'
        required: true
      admin_password:
        description: 'Grafana admin password'
        required: true
        default: 'admin123'
      admin_user:
        description: 'Grafana admin user'
        required: true
        default: 'admin'
      storage_class:
        description: 'Storage class for persistence'
        required: true
        default: 'standard'

env:
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  deploy-prometheus-stack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kubernetes tools
        uses: azure/setup-kubectl@v3
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
      
      - name: Configure Kubernetes
        run: |
          mkdir -p ~/.kube
          echo "${{ inputs.kubeconfig }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config
          kubectl cluster-info

      - name: Create monitoring namespace
        run: kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -

      - name: Add prometheus-community helm repo
        run: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

      - name: Update helm repos
        run: helm repo update

      - name: Deploy prometheus stack
        run: |
          helm upgrade --install prometheus prometheus-community/kube-prometheus-stack \
            --namespace monitoring \
            --set prometheus.enabled=true \
            --set prometheus.persistence.enabled=true \
            --set prometheus.persistence.storageClass=${{ inputs.storage_class }} \
            --set prometheus.persistence.size=10Gi \
            --set prometheus.service.type=NodePort \
            --set grafana.enabled=true \
            --set grafana.adminPassword=${{ inputs.admin_password }} \
            --set grafana.adminUser=${{ inputs.admin_user }} \
            --set grafana.persistence.storageClass=${{ inputs.storage_class }} \
            --set grafana.persistence.size=10Gi \
            --set grafana.service.type=NodePort

name: Deploy Argo stack 

on:
  workflow_dispatch:
    inputs:
      kubeconfig:
        description: 'Base64 encoded kubeconfig'
        required: true
env:
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  deploy-prometheus-stack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kubernetes tools
        uses: azure/setup-kubectl@v3
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
      
      - name: Configure Kubernetes
        run: |
          mkdir -p ~/.kube
          echo "${{ inputs.kubeconfig }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config
          kubectl cluster-info

      - name: Create argocd namespace
        run: kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -

      - name: Create argo namespace
        run: kubectl create namespace argo --dry-run=client -o yaml | kubectl apply -f -        

      - name: Create argo-events namespace
        run: kubectl create namespace argo-events --dry-run=client -o yaml | kubectl apply -f - 
          
      - name: Add argocd helm repo
        run: helm repo add argo-cd https://argoproj.github.io/argo-helm

      - name: Update helm repos
        run: helm repo update

      - name: Deploy argocd 
        run: |
          helm upgrade --install argocd argo-cd/argo-cd \
            --namespace argocd \
            --timeout 10m

      - name: Deploy argo-events
        run: |
          helm upgrade --install argocd argo-cd/argo-events \
            --namespace argocd \
            --timeout 10m
            
      - name: Deploy Argo workflow
        run: kubectl apply -f https://github.com/argoproj/argo-workflows/releases/download/v3.6.7/quick-start-minimal.yaml -n argo

---
- hosts: localhost
  gather_facts: false
  collections:
    - kubernetes.core
  vars:
    loki_namespace: "loki"
    minio_namespace: "minio"
    minio_bucket_name: "loki"
    minio_endpoint: "http://minio.minio.svc.cluster.local:9000"
    minio_access_key: "{{ minio_user }}"
    minio_secret_key: "{{ minio_pass }}"
  environment:
    - K8S_AUTH_KUBECONFIG: ./config
  tasks:
  - name: Add Grafana Helm repo
    kubernetes.core.helm_repository:
      name: grafana
      repo_url: https://grafana.github.io/helm-charts
      state: present

  - name: Create namespace if it doesn't exist
    k8s:
      name: "{{ loki_namespace }}"
      api_version: v1
      kind: Namespace
      state: present
  - name: Create minio namespace if it doesn't exist
    k8s:
      name: "{{ minio_namespace }}"
      api_version: v1
      kind: Namespace
      state: present

  - name: Create PVC for minio
    k8s:
      name: minio-pvc-claim
      namespace: "{{ minio_namespace }}"
      api_version: v1
      kind: PersistentVolumeClaim
      state: present
      definition:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
          storageClassName: "standard"

  - name: Create MinIO deployment
    k8s:
      name: minio
      namespace: "{{ minio_namespace }}"
      api_version: apps/v1
      kind: Deployment
      state: present
      definition:
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: minio  
          template:
            metadata:
              labels:
                app: minio
            spec:
              containers: 
              - name: minio
                image: minio/minio:latest
                command: ["minio", "server", "/data", "--console-address", ":9001"]
                ports:
                  - containerPort: 9000
                    name: http 
                  - containerPort: 9001
                    name: console
                env:
                - name: MINIO_ROOT_USER
                  value: "{{ minio_access_key }}" 
                - name: MINIO_ROOT_PASSWORD
                  value: "{{ minio_secret_key }}"
                resources:
                  requests:
                    memory: "256Mi"
                    cpu: "100m"
                  limits:
                    memory: "1Gi"
                    cpu: "500m"
                readinessProbe:
                  httpGet:
                    path: /minio/health/ready
                    port: http
                  initialDelaySeconds: 10
                  periodSeconds: 5
                livenessProbe:
                  httpGet:
                    path: /minio/health/live
                    port: http
                  initialDelaySeconds: 30
                  periodSeconds: 10
                volumeMounts:
                - name: minio-data
                  mountPath: /data
              volumes:
                - name: minio-data
                  persistentVolumeClaim:
                    claimName: minio-pvc-claim

  - name: Create MinIO service
    k8s:
      name: minio
      namespace: "{{ minio_namespace }}"
      api_version: v1
      kind: Service
      state: present
      definition:
        spec:
          selector:
            app: minio
          ports:
            - port: 9000
              targetPort: http
              name: http
            - port: 9001
              targetPort: console
              name: console

  - name: Wait for MinIO to be ready
    k8s_info:
      kind: Pod
      namespace: "{{ minio_namespace }}"
      label_selectors:
        - app=minio
      wait: yes
      wait_condition:
        type: Ready
        status: "True"

  - name: Create MinIO bucket initialization job
    k8s:
      name: minio-bucket-init
      namespace: "{{ minio_namespace }}"
      api_version: batch/v1
      kind: Job
      state: present
      definition:
        spec:
          template:
            spec:
              containers:
              - name: mc
                image: minio/mc:latest
                command:
                  - /bin/sh
                  - -c
                  - |
                    until mc alias set myminio {{ minio_endpoint }} {{ minio_access_key }} {{ minio_secret_key }}; do
                      echo "Waiting for MinIO to be ready..."
                      sleep 5
                    done
                    mc mb myminio/{{ minio_bucket_name }} --ignore-existing || true
                    mc policy set readwrite myminio/{{ minio_bucket_name }}
              restartPolicy: OnFailure

  - name: Deploy Loki Stack using Helm
    kubernetes.core.helm:
      name: loki
      chart_ref: grafana/loki-stack
      release_namespace: "{{ loki_namespace }}"
      create_namespace: true
      values_files:
        - loki-custom-values.yaml

name: Admin Server Prepare

on:
  workflow_dispatch:
    inputs:
      config_json:
        description: 'Configuration JSON string'
        required: true
        type: string
  
jobs:
  builds:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Parse JSON config
        id: parse
        run: |
          echo '${{ inputs.config_json }}' > config.json

          export SERVER_IP=$(jq -r '.server_ip' config.json)
          export SSH_USER=$(jq -r '.ssh_user' config.json)
          export SSH_PASS=$(jq -r '.ssh_pass' config.json)
          export RUN_PATCH=$(jq -r '.run_patch // false' config.json)
          export RUN_AUDIT=$(jq -r '.run_audit // false' config.json)
          export RUN_HARDEN=$(jq -r '.run_harden // false' config.json)
          export RUN_ADDONS=$(jq -r '.run_addons // false' config.json)
          export EKSCTL_PLUGIN=$(jq -r '.eksctl_plugin // "v0.20.11"' config.json)

          echo "SERVER_IP=$SERVER_IP" >> $GITHUB_ENV
          echo "SSH_USER=$SSH_USER" >> $GITHUB_ENV
          echo "SSH_PASS=$SSH_PASS" >> $GITHUB_ENV
          echo "RUN_PATCH=$RUN_PATCH" >> $GITHUB_ENV
          echo "RUN_AUDIT=$RUN_AUDIT" >> $GITHUB_ENV
          echo "RUN_HARDEN=$RUN_HARDEN" >> $GITHUB_ENV
          echo "RUN_ADDONS=$RUN_ADDONS" >> $GITHUB_ENV
          echo "EKSCTL_PLUGIN=$EKSCTL_PLUGIN" >> $GITHUB_ENV
      - name: Print config
        run: |
          echo "Admin Server IP : $SERVER_IP"
          echo "Enable Patching : $RUN_PATCH"
          echo "Enable Auditng  : $RUN_AUDIT"
          echo "Enable Hardening: $RUN_HARDEN"
          echo "Apply Addons    : $RUN_ADDONS"

      - name: Install Ansible and sshpass
        run: |
          sudo apt update
          sudo apt install -y python3-pip sshpass
          pip3 install --upgrade pip setuptools
          pip3 install ansible
          
      - name: Add ~/.local/bin to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Create dynamic inventory
        run: |
          touch inventory.ini
          echo "[all]" >> inventory.ini
          echo "${SERVER_IP} ansible_user=${SSH_USER} ansible_ssh_pass=${SSH_PASS} ansible_become_pass=${SSH_PASS} ansible_connection=ssh ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory.ini

      - name: Build selected role list
        id: roles
        run: |
          ROLES="${{ steps.first.outputs.roles }}"
          if [ "${RUN_PATCH}" = "true" ]; then
            ROLES="$ROLES PATCH"
          fi
          if [ "${RUN_AUDIT}" = "true" ]; then
            ROLES="$ROLES AUDIT"
          fi
          if [ "${RUN_HARDEN}" = "true" ]; then
            ROLES="$ROLES HARDEN"
          fi
          if [ "${RUN_ADDONS}" = "true" ]; then
            ROLES="$ROLES ADDONS"
          fi
          echo "roles=$ROLES" >> $GITHUB_OUTPUT

      - name: Run Ansible playbook with selected roles
        run: |
          ansible-playbook -i inventory.ini playbook.yml \
            -e "selected_roles='${{ steps.roles.outputs.roles }}'" \
            -e "ADMIN_USER=${SSH_USER}" \
            -e "EKSCTL_PLUGIN_VERSION=${EKSCTL_PLUGIN}" \
            --extra-vars "ansible_python_interpreter=/usr/bin/python3"

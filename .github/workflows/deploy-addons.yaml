name: Cluster Bootstrap Pipeline

on:
  workflow_dispatch:

jobs:
  install-argocd:
    runs-on: self-hosted
    steps:
      - name: Clean the Workspace                      
        run: rm -rf ${{ github.workspace }}/*          
                                                       
      - name: Clone                                    
        uses: actions/checkout@v4              

      - name: Set KUBECONFIG
        run: |
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV        
                                                       
      - name: Set up PATH                              
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install ArgoCD
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm upgrade --install argocd argo/argo-cd \
            --namespace argocd \
            --create-namespace \
            --values cluster-setup/argocd/values.yaml \
            --wait
      - name: Create Namespace for Istio
        run: |
          kubectl create namespace istio-system

  deploy-addons:
    needs: install-argocd
    runs-on: self-hosted
    steps:
      - name: Clean the Workspace                      
        run: rm -rf ${{ github.workspace }}/*          
                                                       
      - name: Clone                                    
        uses: actions/checkout@v4                      
                                                       
      - name: Set up PATH                              
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
   
      - name: Set KUBECONFIG                                 
        run: |                                               
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
                                                             
      - name: Check k8s Nodes                                
        run: kubectl get nodes                               
      
      - name: Configure ArgoCD Access
        run: |
          ARGOCD_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username admin \
            --password $ARGOCD_PASSWORD \
            --insecure
          
          kubectl apply -f cluster-setup/addons/root-app.yaml -n argocd

      - name: Verify Deployment
        run: |
          argocd app wait cluster-addons --health
          argocd app list
